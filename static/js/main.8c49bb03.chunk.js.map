{"version":3,"sources":["cv_.pdf","App.js","reportWebVitals.js","index.js"],"names":["pdfjs","GlobalWorkerOptions","workerSrc","version","App","useState","setNumPages","pageNumber","window","innerWidth","windowWidth","pdf","cv","className","file","onLoadSuccess","numPages","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAAe,MAA0B,gC,8BCMzCA,IAAMC,oBAAoBC,UAA1B,wDAAuFF,IAAMG,QAA7F,kBAuBeC,MArBf,WACI,MAAwBC,mBAAS,MAAxBC,EAAT,oBACA,EAAuBD,mBAAS,GAAzBE,EAAP,oBACA,EAAwBF,mBAASG,OAAOC,YAAjCC,EAAP,oBACMC,EAAMC,EAKZ,OACI,qBAAKC,UAAU,MAAf,SACI,cAAC,IAAD,CACIA,UAAU,UACVC,KAAMH,EACNI,cATZ,YAA8C,IAAbC,EAAY,EAAZA,SAC7BV,EAAYU,IAKR,SAII,cAAC,IAAD,CAAMT,WAAYA,EAAYU,MAAqB,GAAdP,SCXtCQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c49bb03.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cv_.538f4869.pdf\";","import cv from './cv_.pdf'\nimport './App.css';\nimport React, {useState} from 'react';\nimport {Document, Page, pdfjs} from \"react-pdf\";\nimport 'react-pdf/dist/umd/Page/AnnotationLayer.css';\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction App() {\n    const [, setNumPages] = useState(null);\n    const [pageNumber, ] = useState(1);\n    const [windowWidth, ] = useState(window.innerWidth);\n    const pdf = cv;\n    function onDocumentLoadSuccess({ numPages }) {\n        setNumPages(numPages);\n    }\n\n    return (\n        <div className=\"App\">\n            <Document\n                className=\"App-pdf\"\n                file={pdf}\n                onLoadSuccess={onDocumentLoadSuccess}>\n                <Page pageNumber={pageNumber} width={windowWidth * 0.9}/>\n            </Document>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}